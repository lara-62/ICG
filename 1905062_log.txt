Line# 2: Token <INT> Lexeme int found
type_specifier : INT
Line# 2: Token <ID> Lexeme main found
Line# 2: Token <LPAREN> Lexeme ( found
Line# 2: Token <RPAREN> Lexeme ) found
Line# 3: Token <LCURL> Lexeme { found
Line# 4: Token <INT> Lexeme int found
type_specifier : INT
Line# 4: Token <ID> Lexeme i found
Line# 4: Token <COMMA> Lexeme , found
declaration_list : ID	
Line# 4: Token <ID> Lexeme j found
Line# 4: Token <SEMICOLON> Lexeme ; found
declaration_list : declaration_list COMMA ID
var_declaration	: type_specifier declaration_list SEMICOLON
statement : var_declaration
statements	: statement
Line# 5: Token <ID> Lexeme i found
Line# 5: Token <ASSIGNOP> Lexeme = found
variable : ID
Line# 5: Token <CONST_INT> Lexeme 0 found
factor : CONST_INT
unary_expression : factor
term : unary_expression
Line# 5: Token <SEMICOLON> Lexeme ; found
simple_expression : term
rel_expression : simple_expression
logic_expression : rel_expression
expression : variable ASSIGNOP logic_expression
expression_statement : expression SEMICOLON
statement : expression_statement
statements : statements statement
Line# 6: Token <ID> Lexeme j found
Line# 6: Token <ASSIGNOP> Lexeme = found
variable : ID
Line# 6: Token <ID> Lexeme i found
Line# 6: Token <INCOP> Lexeme ++ found
variable : ID
factor : variable INCOP
unary_expression : factor
term : unary_expression
Line# 6: Token <SEMICOLON> Lexeme ; found
simple_expression : term
rel_expression : simple_expression
logic_expression : rel_expression
expression : variable ASSIGNOP logic_expression
expression_statement : expression SEMICOLON
statement : expression_statement
statements : statements statement
Line# 7: Token <PRINTLN> Lexeme println found
Line# 7: Token <LPAREN> Lexeme ( found
Line# 7: Token <ID> Lexeme j found
Line# 7: Token <RPAREN> Lexeme ) found
Line# 7: Token <SEMICOLON> Lexeme ; found
statement : PRINTLN LPAREN ID RPAREN SEMICOLON
statements : statements statement
Line# 8: Token <RETURN> Lexeme return found
Line# 8: Token <CONST_INT> Lexeme 0 found
factor : CONST_INT
unary_expression : factor
term : unary_expression
Line# 8: Token <SEMICOLON> Lexeme ; found
simple_expression : term
rel_expression : simple_expression
logic_expression : rel_expression
expression : logic_expression
statement : RETURN expression SEMICOLON
statements : statements statement
Line# 9: Token <RCURL> Lexeme } found
compound_statement : LCURL statements RCURL
	ScopeTable# 2
	7--> <i, INT> 
	8--> <j, INT> 
	ScopeTable# 1
	2--> <main, FUNCTION, INT> 
func_definition : type_specifier ID LPAREN RPAREN compound_statement
unit : func_definition
program : unit
start : program
Total Lines: 9
Total Errors: 0
